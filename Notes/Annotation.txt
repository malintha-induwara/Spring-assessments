1) @ComponentScan ->   Tell Go find objects that like to work with spring  
   (basePackages = "lk.ijse.gdse.add") - if you give path like this it only scan this directory and its sub directory
   
   (baseClass = Hello.java) - only the mentioned class
   
   
   
   @Component -> Mark a class as its suitable for work with spring (a calss we created , we have the source code)
   
   
   @Bean -> if we going to register a class that we dont have a source code we use bean annotaion(objects that managed by spring framework)
    these are singleton( we say scope is singleton) if we want we can change the scope
  
   
   @Retecteion -> this is used to tell  in which time the annotation should remove 
   
   @Autowired ->used for dependency injection, it used to tell spring to inject a bean of (that type)  inside application context
   
   
   
   @Qulifer-> Used to resolve ambiguity in Spring dependency injection when multiple beans of the same type are present. It allows specifying the exact bean to inject.



   @Primary-> Marks a bean as the primary bean to be chosen when multiple candidates are available for autowiring.
   
   @Scope -> Used to define the scope of a bean there are 4 types (Singleton,Prototype,Session,Request)  but we can only use Singleton and Prototype  , only in web application we can use session and Request
   
   @CompontentScan

   @Repositoty -> A specialization of @Component, it marks a class as a data access object (DAO). It is used to encapsulate database interaction logic.

   @PostConstruct -> Marks a method to be called after the beanâ€™s initialization. It is used for any setup that needs to occur after dependency injection.

   @PreDestroy -> Marks a method to be invoked when the Spring bean is about to be destroyed, allowing for cleanup tasks before bean destruction.


   @EnableJpaRepositories -> Enables JPA repositories by scanning the specified package for Spring Data JPA repository interfaces.

    @Transactional ->  Indicates that a method or class should be wrapped in a transaction. It ensures that a series of operations either complete successfully or rollback to maintain consistency.

   
